version: '3.8'

services:
  es_node:
    image: docker.elastic.co/elasticsearch/elasticsearch:7.14.1
    ports:
      - "9200:9200"
      - "9300:9300"
    configs:
      - source: elastic_config
        target: /usr/share/elasticsearch/config/elasticsearch.yml
    environment:
      network.publish_host: _eth0_
      ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      ELASTIC_PASSWORD: changeme
      # Set a predictable node name.
      node.name: es_node.{{.Task.Slot}}
      # Disable single-node discovery.
      discovery.type: ''
      # Use internal Docker round-robin DNS for unicast discovery.
      discovery.seed_hosts: tasks.es_node
      # Define initial masters, assuming a cluster size of at least 3.
      cluster.initial_master_nodes: es_node.1,es_node.2,es_node.3
    networks:
      - overlay
    volumes:
      - es_data:/usr/share/elasticsearch/data

    deploy:
      mode: replicated
      replicas: 3 
      resources:
        limits:
          cpus: '3.00'
          memory: 1000M

  es_kibana:
    image: docker.elastic.co/kibana/kibana:7.14.1
    ports:
      - "5601:5601"
    configs:
      - source: kibana_config
        target: /usr/share/kibana/config/kibana.yml
    networks:
      - overlay
    deploy:
      mode: replicated
      replicas: 1
      resources:
        limits:
          cpus: '2.00'
          memory: 500M

  kafka_zookeeper:
    image: confluentinc/cp-zookeeper:6.2.0
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - overlay
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 200M

  kafka_broker:
    image: confluentinc/cp-server:6.2.0
    depends_on:
      - kafka_zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'kafka_zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka_broker:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_METRIC_REPORTERS: io.confluent.metrics.reporter.ConfluentMetricsReporter
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_CONFLUENT_LICENSE_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CONFLUENT_BALANCER_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_CONFLUENT_SCHEMA_REGISTRY_URL: http://kafka_schema-registry:8081
      CONFLUENT_METRICS_REPORTER_BOOTSTRAP_SERVERS: kafka_broker:29092
      CONFLUENT_METRICS_REPORTER_TOPIC_REPLICAS: 1
      CONFLUENT_METRICS_ENABLE: 'true'
      CONFLUENT_SUPPORT_CUSTOMER_ID: 'anonymous'
    networks:
      - overlay
    deploy:
      resources:
        limits:
          cpus: '3.00'
          memory: 1000M

  kafka_schema-registry:
    image: confluentinc/cp-schema-registry:6.2.0
    depends_on:
      - kafka_broker
    ports:
      - "8081:8081"
    environment:
      SCHEMA_REGISTRY_HOST_NAME: schema-registry
      SCHEMA_REGISTRY_KAFKASTORE_BOOTSTRAP_SERVERS: 'kafka_broker:29092'
      SCHEMA_REGISTRY_LISTENERS: http://0.0.0.0:8081
    networks:
      - overlay
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 500M

  kafka_connect:
    image: docker-hub.doitsu.tech/kafka-connect-customer:latest
    depends_on:
      - kafka_broker
      - kafka_schema-registry
    ports:
      - "8083:8083"
    environment:
      CONNECT_BOOTSTRAP_SERVERS: 'kafka_broker:29092'
      CONNECT_REST_ADVERTISED_HOST_NAME: connect
      CONNECT_REST_PORT: 8083
      CONNECT_GROUP_ID: compose-connect-group
      CONNECT_CONFIG_STORAGE_TOPIC: docker-connect-configs
      CONNECT_CONFIG_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_OFFSET_FLUSH_INTERVAL_MS: 10000
      CONNECT_OFFSET_STORAGE_TOPIC: docker-connect-offsets
      CONNECT_OFFSET_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_STATUS_STORAGE_TOPIC: docker-connect-status
      CONNECT_STATUS_STORAGE_REPLICATION_FACTOR: 1
      CONNECT_KEY_CONVERTER: org.apache.kafka.connect.storage.StringConverter
      CONNECT_VALUE_CONVERTER: io.confluent.connect.avro.AvroConverter
      CONNECT_VALUE_CONVERTER_SCHEMA_REGISTRY_URL: http://kafka_schema-registry:8081

      # CLASSPATH required due to CC-2422
      CLASSPATH: /usr/share/java/monitoring-interceptors/monitoring-interceptors-6.2.0.jar
      CONNECT_PRODUCER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringProducerInterceptor"
      CONNECT_CONSUMER_INTERCEPTOR_CLASSES: "io.confluent.monitoring.clients.interceptor.MonitoringConsumerInterceptor"
      CONNECT_PLUGIN_PATH: "/usr/share/java,/usr/share/confluent-hub-components"
      CONNECT_LOG4J_LOGGERS: org.apache.zookeeper=ERROR,org.I0Itec.zkclient=ERROR,org.reflections=ERROR
    volumes:
      - ./kafka/kafa-connect/config/connect.password:/etc/kafka/connect.password
    networks:
      - overlay 
    deploy:
      resources:
        limits:
          cpus: '4.00'
          memory: 1000M

  postgres_db:
    image: debezium/postgres:latest
    environment:
      POSTGRES_PASSWORD: changeme 
    ports:
      - 5432:5432
    networks:
      - overlay
    volumes:
      - postgres_db:/var/lib/postgres
    deploy:
      resources:
        limits:
          cpus: '2.00'
          memory: 2000M

  postgres_pgadmin:
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@doitsu.tech 
      PGADMIN_DEFAULT_PASSWORD: changeme
    ports:
      - 18080:80 
    networks:
      - overlay
    volumes:
      - postgres_pgadmin:/root/.pgadmin
    deploy:
      resources:
        limits:
          cpus: '1.00'
          memory: 500M

configs:
  elastic_config:
    file: ./elasticsearch/config/elasticsearch.yml
  kibana_config:
    file: ./kibana/config/kibana.yml

networks:
  overlay:
    driver: overlay
    attachable: true
    ipam:
      config:
        - subnet: 10.113.0.0/16

volumes:
  postgres_pgadmin:
  postgres_db:
  es_data:
    name: 'es_data_{{.Task.Slot}}'
  kafka_broker_data:
  kafka_zookeeper_data:
